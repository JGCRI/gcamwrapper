% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_library.R
\name{apply_query_params}
\alias{apply_query_params}
\title{Translate a raw query looked up from a query library into a GCAM Fusion query.}
\usage{
apply_query_params(query, query_params, is_get_data)
}
\arguments{
\item{query}{The raw query which needs to have it's placeholders translated.}

\item{query_params}{The user options provided as a list of arg_tags to and array of
operators and potentially operands which will get translated to GCAM Fusion syntax.}

\item{is_get_data}{A boolean if true follows get data symantics and set data if false.}
}
\value{
A translated query into GCAM Fusion syntax that is ready to run.
}
\description{
Raw queries will contain placeholders such as \code{'{arg_tag@arg_type}'} and those
will get replaced user supplied filter options supplied as a list in \code{query_params}
where we match those keys to `arg_type`.  If `arg_type` is "name" then \link{parse_str_query_param}
will be used to process the value of query_params[[arg_tag]] and if "year" then
\link{parse_int_query_param} is used.
Note symantics are slightly different if is_get_data is true as described in parse_.*_query_params.
For any arg_tag which has no entry in query_params it will be given the results of passing `NULL`
to parse_int/str_query_param.
}
